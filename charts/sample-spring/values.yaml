fullnameOverride: sample-spring

replicaCount: 1

profile: default

namespace: development

image:
  repository: sample-spring
  tag: latest
  pullPolicy: Always

labels: {}
annotations: {}

pod:
  labels: {}
  annotations: {}

pdb: {}

service:
  type: ClusterIP
  externalPort: 80
  internalPort: 8080
  annotations: {}
  labels: {}

ingress:
  enabled: true
  subdomain: sample-spring
  basedomain: 127.0.0.1.nip.io
  tlsSecret: sample-spring-tls
  hosts: {}
  # hosts:
  #   - name: sample-spring.nalbam.com
  #     path: /
  #     tls: true
  #     tlsSecret: sample-spring-tls
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/use-regex: "true"
    # ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0
  labels: {}

autoscaling:
  enabled: true
  min: 1
  max: 5
  cpu: 80
  mem: 80

resources:
  requests:
    cpu: 500m
    memory: 1024Mi
  limits:
    cpu: 600m
    memory: 1252Mi

readinessProbe:
  httpGet:
    path: /read
    port: 8080
  initialDelaySeconds: 60
  periodSeconds: 10
  failureThreshold: 3

livenessProbe:
  httpGet:
    path: /live
    port: 8080
  initialDelaySeconds: 60
  periodSeconds: 10
  failureThreshold: 3

# livenessProbe:
#   exec:
#     command:
#     - cat
#     - /tmp/healthy
#   initialDelaySeconds: 15
#   periodSeconds: 10
# livenessProbe:
#   tcpSocket:
#     port: 8080
#   initialDelaySeconds: 15
#   periodSeconds: 10

# hostNetwork: true
# dnsPolicy: Default

nodeSelector: {}

tolerations: []

affinity: {}

env: {}
  # - name: MESSAGE
  #   value: "hello world"

configmap:
  enabled: false
  data: {}
    # MESSAGE: "hello world"

secret:
  enabled: false
  data: {}
    # SECRET: "c2VjcmV0IHdvcmxkCg=="
