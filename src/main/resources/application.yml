server:
  port: 8080

spring:
  application:
    name: sample-spring
  profiles:
    active: ${PROFILE:default}
  jackson:
    time-zone: Asia/Seoul
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
  mvc:
    static-path-pattern: /static/**
  jpa:
    hibernate:
      ddl-auto: update
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      maximum-pool-size: 10

management:
  endpoints:
    web.exposure.include: info, health, metrics, prometheus

namespace: ${NAMESPACE:default}

message: ${MESSAGE:Refreshed}

version: ${VERSION:v0.0.0}

slack:
  webhook: ${SLACK_WEBHOOK:/slack/token}
  channel: ${SLACK_CHANNEL:sandbox}

opentracing:
  jaeger:
    enable-b3-propagation: true
    # http-sender:
    #   url: ${JAEGER_HTTP_SENDER_URL}
    udp-sender:
      host: ${JAEGER_UDP_SENDER_HOST:localhost}
      port: ${JAEGER_UDP_SENDER_PORT:6831}

task:
  scheduled: ${TASK_SCHEDULED:false}

---
spring:
  profiles: default
  jpa:
    show-sql: true
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: postgres

message: ":tada: Local Server UP"

---
spring:
  profiles: dev
  datasource:
    url: jdbc:postgresql://database-1.cv2wx6mzzwbw.ap-northeast-2.rds.amazonaws.com:5432/postgres
    username: postgres
    password: 57mDOheGEZikug4DbIM2

message: ":tada: Development Server UP"

---
spring:
  profiles: stage

message: ":tada: Staging Server UP"

---
spring:
  profiles: prod

message: ":tada: Production Server UP"
